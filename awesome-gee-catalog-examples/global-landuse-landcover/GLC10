/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var GLC10 = ee.ImageCollection("projects/sat-io/open-datasets/FROM-GLC10");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Define a dictionary which will be used to make legend and visualize image on map
var dict = {
  "names": [
    "Background",	
    "Cropland",
    "Forest",
    "Grass",
    "Shrub",
    "Water",
    "Impervious",
    "Bareland",
    "Snow/Ice",
    "Cloud"
  ],
  "colors": [
    '#000000',
    '#a3ff73',
    '#267300',
    '#4ce600',
    '#70a800',
    '#005cff',
    '#c500ff',
    '#ffaa00',
    '#00ffc5',
    '#ffffff'
  ]};

// Create a panel to hold the legend widget
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});

// Function to generate the legend
function addCategoricalLegend(panel, dict, title) {
  
  // Create and add the legend title.
  var legendTitle = ui.Label({
    value: title,
    style: {
      fontWeight: 'bold',
      fontSize: '18px',
      margin: '0 0 4px 0',
      padding: '0'
    }
  });
  panel.add(legendTitle);
  
  var loading = ui.Label('Loading legend...', {margin: '2px 0 4px 0'});
  panel.add(loading);
  
  // Creates and styles 1 row of the legend.
  var makeRow = function(color, name) {
    // Create the label that is actually the colored box.
    var colorBox = ui.Label({
      style: {
        backgroundColor: color,
        // Use padding to give the box height and width.
        padding: '8px',
        margin: '0 0 4px 0'
      }
    });
  
    // Create the label filled with the description text.
    var description = ui.Label({
      value: name,
      style: {margin: '0 0 4px 6px'}
    });
  
    return ui.Panel({
      widgets: [colorBox, description],
      layout: ui.Panel.Layout.Flow('horizontal')
    });
  };
  
  // Get the list of palette colors and class names from the image.
  var palette = dict['colors'];
  var names = dict['names'];
  loading.style().set('shown', false);
  
  for (var i = 0; i < names.length; i++) {
    panel.add(makeRow(palette[i], names[i]));
  }
  
  Map.add(panel);
  
}


/*
  // Display map and legend ///////////////////////////////////////////////////////////////////////////////
*/

// Add the legend to the map
addCategoricalLegend(legend, dict, 'FROM-GLC10 Land Cover');

var mosaic = GLC10.mosaic().remap([0,10,20,30,40,60,80,90,100,120],[0,1,2,3,4,5,6,7,8,9])

// Add image to the map
Map.addLayer(mosaic, {min:0, max:9, palette:dict['colors']}, 'GLC 10m')
